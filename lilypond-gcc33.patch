--- lilypond-1.6.11/configure.in.orig	2003-07-02 18:29:29.000000000 +0200
+++ lilypond-1.6.11/configure.in	2003-08-24 16:20:10.151244160 +0200
@@ -19,7 +19,6 @@
 STEPMAKE_GCC(REQUIRED, 2.8)
 STEPMAKE_CXX(REQUIRED)
 STEPMAKE_GXX(REQUIRED, 2.95)
-STEPMAKE_CHECK_VERSION_UNSUPPORTED(CXX, UNSUPPORTED, 3.3)
 STEPMAKE_CXXTEMPLATE
 STEPMAKE_LIB(REQUIRED)
 STEPMAKE_BISON(REQUIRED, 1.25)
--- lilypond-1.6.11/lily/a2-engraver.cc.orig	2002-08-08 00:45:40.000000000 +0200
+++ lilypond-1.6.11/lily/a2-engraver.cc	2003-08-24 17:10:55.805234376 +0200
@@ -200,18 +200,18 @@
 }
 
 ENTER_DESCRIPTION(A2_engraver,
-/* descr */       "Part combine engraver for orchestral scores.
-
-The markings @emph{a2}, @emph{Solo} and @emph{Solo II}, are
-created by this engraver.  It also acts upon instructions of the part
-combiner.  Another thing that the this engraver, is forcing of stem,
-slur and tie directions, always when both threads are not identical;
-up for the musicexpr called @code{one}, down for the musicexpr called
-@code{two}.
-
+/* descr */       "Part combine engraver for orchestral scores.\n\
+\n\
+The markings @emph{a2}, @emph{Solo} and @emph{Solo II}, are\n\
+created by this engraver.  It also acts upon instructions of the part\n\
+combiner.  Another thing that the this engraver, is forcing of stem,\n\
+slur and tie directions, always when both threads are not identical;\n\
+up for the musicexpr called @code{one}, down for the musicexpr called\n\
+@code{two}.\n\
+\n\
 ",
 /* creats*/       "TextScript",
-/* acks  */       "multi-measure-rest-interface
+/* acks  */       "multi-measure-rest-interface\n\
 slur-interface stem-interface tie-interface note-head-interface dynamic-interface text-interface"
 ,/* reads */       "combineParts noDirection soloADue soloText soloIIText aDueText split-interval unison solo unisilence unirhythm",
 /* write */       "");
--- lilypond-1.6.11/lily/accidental-engraver.cc.orig	2002-09-18 10:31:59.000000000 +0200
+++ lilypond-1.6.11/lily/accidental-engraver.cc	2003-08-24 17:11:26.481570864 +0200
@@ -477,8 +477,8 @@
 
 
 ENTER_DESCRIPTION (Accidental_engraver,
-"Make accidentals.  Catches note heads, ties and notices key-change
-events.  Due to interaction with ties (which don't come together
+"Make accidentals.  Catches note heads, ties and notices key-change\n\
+events.  Due to interaction with ties (which don't come together\n\
 with note heads), this needs to be in a context higher than Tie_engraver.",
 		   
 	       "Accidental",
--- lilypond-1.6.11/lily/auto-beam-engraver.cc.orig	2002-08-18 11:28:20.000000000 +0200
+++ lilypond-1.6.11/lily/auto-beam-engraver.cc	2003-08-24 17:12:43.733826736 +0200
@@ -490,11 +490,11 @@
 }
 
 ENTER_DESCRIPTION (Auto_beam_engraver,
-/* descr */       "Generate beams based on measure characteristics and observed
-Stems.  Uses beatLength, measureLength and measurePosition to decide
-when to start and stop a beam.  Overriding beaming is done through
-@ref{Stem_engraver} properties stemLeftBeamCount and
-stemRightBeamCount.
+/* descr */       "Generate beams based on measure characteristics and observed\n\
+Stems.  Uses beatLength, measureLength and measurePosition to decide\n\
+when to start and stop a beam.  Overriding beaming is done through\n\
+@ref{Stem_engraver} properties stemLeftBeamCount and\n\
+stemRightBeamCount.\n\
 ",
 /* creats*/       "Beam",
 /* acks  */       "stem-interface rest-interface beam-interface bar-line-interface",
--- lilypond-1.6.11/lily/axis-group-engraver.cc.orig	2002-08-09 15:40:44.000000000 +0200
+++ lilypond-1.6.11/lily/axis-group-engraver.cc	2003-08-24 17:13:10.493758608 +0200
@@ -164,8 +164,8 @@
 Hara_kiri_engraver::Hara_kiri_engraver(){}
 
 ENTER_DESCRIPTION(Hara_kiri_engraver,
-/* descr */       "Like Axis_group_engraver, but make a hara kiri spanner, and add
-interesting items (ie. note heads, lyric syllables and normal rests)
+/* descr */       "Like Axis_group_engraver, but make a hara kiri spanner, and add\n\
+interesting items (ie. note heads, lyric syllables and normal rests)\n\
 ",
 /* creats*/       "HaraKiriVerticalGroup",
 /* acks  */       "grob-interface",
--- lilypond-1.6.11/lily/bar-engraver.cc.orig	2002-07-26 02:23:29.000000000 +0200
+++ lilypond-1.6.11/lily/bar-engraver.cc	2003-08-24 17:13:32.648390592 +0200
@@ -109,7 +109,7 @@
 
 
 ENTER_DESCRIPTION(Bar_engraver,
-/* descr */       "Create barlines. This engraver is controlled through the
+/* descr */       "Create barlines. This engraver is controlled through the\n\
 @code{whichBar} property. If it has no bar line to create, it will forbid a linebreak at this point",
 /* creats*/       "BarLine",
 /* acks  */       "",
--- lilypond-1.6.11/lily/bar-line.cc.orig	2002-09-08 01:25:04.000000000 +0200
+++ lilypond-1.6.11/lily/bar-line.cc	2003-08-24 17:14:16.007798960 +0200
@@ -190,20 +190,20 @@
 
 
 ADD_INTERFACE (Bar_line, "bar-line-interface",
-  "Bar line.
-
-This is a request to print a special bar symbol. It replaces the 
-regular bar symbol with a special
-symbol.  The argument @var{bartype} is a string which specifies the
-kind of bar to print.  Options are @code{:|},
-@code{|:}, @code{:|:},
-@code{||}, @code{|.},
-@code{.|}, and @code{.|.}. 
-
-These produce, respectively, a right repeat, a left repeat, a double
-repeat, a double bar, a start bar, an end bar, and a thick double bar.
-If @var{bartype} is set to @code{empty} then nothing is printed,
-but a line break is allowed at that spot.
+  "Bar line.\n\
+\n\
+This is a request to print a special bar symbol. It replaces the \n\
+regular bar symbol with a special\n\
+symbol.  The argument @var{bartype} is a string which specifies the\n\
+kind of bar to print.  Options are @code{:|},\n\
+@code{|:}, @code{:|:},\n\
+@code{||}, @code{|.},\n\
+@code{.|}, and @code{.|.}. \n\
+\n\
+These produce, respectively, a right repeat, a left repeat, a double\n\
+repeat, a double bar, a start bar, an end bar, and a thick double bar.\n\
+If @var{bartype} is set to @code{empty} then nothing is printed,\n\
+but a line break is allowed at that spot.\n\
 "
 ,
   "bar-size-procedure kern thin-kern hair-thickness thick-thickness glyph bar-size break-glyph-function");
--- lilypond-1.6.11/lily/bar-number-engraver.cc.orig	2002-09-06 23:06:19.000000000 +0200
+++ lilypond-1.6.11/lily/bar-number-engraver.cc	2003-08-24 17:14:39.157279704 +0200
@@ -115,7 +115,7 @@
 }
 
 ENTER_DESCRIPTION(Bar_number_engraver,
-/* descr */       "A bar number is created whenever measurePosition is zero. It is
+/* descr */       "A bar number is created whenever measurePosition is zero. It is\n\
 put on top of all staves, and appears only at  left side of the staff.",
 /* creats*/       "BarNumber",
 /* acks  */       "break-aligned-interface",
--- lilypond-1.6.11/lily/beam.cc.orig	2002-10-04 23:43:32.000000000 +0200
+++ lilypond-1.6.11/lily/beam.cc	2003-08-24 17:15:36.016635768 +0200
@@ -1485,22 +1485,22 @@
 
 
 ADD_INTERFACE (Beam, "beam-interface",
-  "A beam.
-
-#'thickness= weight of beams, in staffspace
-
-
-We take the least squares line through the ideal-length stems, and
-then damp that using
-
-	damped = tanh (slope)
-
-this gives an unquantized left and right position for the beam end.
-Then we take all combinations of quantings near these left and right
-positions, and give them a score (according to how close they are to
-the ideal slope, how close the result is to the ideal stems, etc.). We
-take the best scoring combination.
-
+  "A beam.\n\
+\n\
+#'thickness= weight of beams, in staffspace\n\
+\n\
+\n\
+We take the least squares line through the ideal-length stems, and\n\
+then damp that using\n\
+\n\
+	damped = tanh (slope)\n\
+\n\
+this gives an unquantized left and right position for the beam end.\n\
+Then we take all combinations of quantings near these left and right\n\
+positions, and give them a score (according to how close they are to\n\
+the ideal slope, how close the result is to the ideal stems, etc.). We\n\
+take the best scoring combination.\n\
+\n\
 ",
   "knee french-beaming position-callbacks concaveness-gap concaveness-threshold dir-function quant-score auto-knee-gap gap chord-tremolo beamed-stem-shorten shorten least-squares-dy damping flag-width-function neutral-direction positions space-function thickness");
 
--- lilypond-1.6.11/lily/beam-engraver.cc.orig	2002-08-08 00:45:40.000000000 +0200
+++ lilypond-1.6.11/lily/beam-engraver.cc	2003-08-24 17:16:34.524741184 +0200
@@ -302,7 +302,7 @@
 
 
 ENTER_DESCRIPTION(Beam_engraver,
-/* descr */       "Handles Beam_requests by engraving Beams.    If omitted, then notes will be
+/* descr */       "Handles Beam_requests by engraving Beams.    If omitted, then notes will be\n\
 printed with flags instead of beams.",
 /* creats*/       "Beam",
 /* acks  */       "stem-interface rest-interface",
@@ -342,9 +342,9 @@
 
 
 ENTER_DESCRIPTION(Grace_beam_engraver,
-/* descr */       "Handles Beam_requests by engraving Beams.  If omitted, then notes will
-be printed with flags instead of beams. Only engraves beams when we
-are at grace points in time.
+/* descr */       "Handles Beam_requests by engraving Beams.  If omitted, then notes will\n\
+be printed with flags instead of beams. Only engraves beams when we\n\
+are at grace points in time.\n\
 ",
 /* creats*/       "Beam",
 /* acks  */       "stem-interface rest-interface",
--- lilypond-1.6.11/lily/break-align-interface.cc.orig	2002-08-31 00:41:04.000000000 +0200
+++ lilypond-1.6.11/lily/break-align-interface.cc	2003-08-24 17:17:29.934317648 +0200
@@ -215,22 +215,22 @@
 
 
 ADD_INTERFACE (Break_aligned_interface, "break-aligned-interface",
-  "Items that are aligned in prefatory matter.
-
-The spacing of these items is controlled by the space-alist
-property. It contains a list break-align-symbols with a specification
-of the associated space. The space definition is either (extra-space
-. @var{number}), which adds space after the symbol, (minimum-space
-. @var{ms}), which pads the space until it it is @var{ms}.
-
-
-Special keys for the alist are 'first-note and 'next-note, signifyign
-the first note on a line, and the next note halfway a line.
-
-Rules for this spacing are much more complicated than this. 
-See [Wanske] page 126 -- 134, [Ross] pg 143 -- 147
-
-
+  "Items that are aligned in prefatory matter.\n\
+\n\
+The spacing of these items is controlled by the space-alist\n\
+property. It contains a list break-align-symbols with a specification\n\
+of the associated space. The space definition is either (extra-space\n\
+. @var{number}), which adds space after the symbol, (minimum-space\n\
+. @var{ms}), which pads the space until it it is @var{ms}.\n\
+\n\
+\n\
+Special keys for the alist are 'first-note and 'next-note, signifyign\n\
+the first note on a line, and the next note halfway a line.\n\
+\n\
+Rules for this spacing are much more complicated than this. \n\
+See [Wanske] page 126 -- 134, [Ross] pg 143 -- 147\n\
+\n\
+\n\
 ",
   "break-align-symbol break-alignment-done space-alist");
 
--- lilypond-1.6.11/lily/chord-name-engraver.cc.orig	2002-07-26 02:23:29.000000000 +0200
+++ lilypond-1.6.11/lily/chord-name-engraver.cc	2003-08-24 17:17:56.381297096 +0200
@@ -104,7 +104,7 @@
 }
 
 ENTER_DESCRIPTION(Chord_name_engraver,
-/* descr */       "Catch Note_req's, Tonic_reqs, Inversion_reqs, Bass_req
+/* descr */       "Catch Note_req's, Tonic_reqs, Inversion_reqs, Bass_req\n\
 and generate the appropriate chordname.",
 /* creats*/       "ChordName",
 /* acks  */       "",
--- lilypond-1.6.11/lily/completion-note-heads-engraver.cc.orig	2002-08-23 02:42:08.000000000 +0200
+++ lilypond-1.6.11/lily/completion-note-heads-engraver.cc	2003-08-24 17:19:13.939506456 +0200
@@ -309,8 +309,8 @@
 }
 
 ENTER_DESCRIPTION(Completion_heads_engraver,
-/* descr */       "This engraver replaces
-@code{Note_heads_engraver}. It plays some trickery to
+/* descr */       "This engraver replaces\n\
+@code{Note_heads_engraver}. It plays some trickery to\n\
 break long notes and automatically tie them into the next measure.",
 /* creats*/       "NoteHead Dots",
 /* acks  */       "",
--- lilypond-1.6.11/lily/custos.cc.orig	2002-09-05 23:19:35.000000000 +0200
+++ lilypond-1.6.11/lily/custos.cc	2003-08-24 17:20:20.060454544 +0200
@@ -109,17 +109,17 @@
 }
 
 ADD_INTERFACE (Custos, "custos-interface",
-  "A custos is a staff context symbol that appears at the end of a
-  staff line with monophonic musical contents (i.e. with a single
-  voice).  It anticipates the pitch of the first note of the following
-  line and thus helps the player or singer to manage line breaks
-  during performance, thus enhancing readability of a score.
-
-  Custodes were frequently used in music notation until the 16th
-  century.  There were different appearences for different notation
-  styles.  Nowadays, they have survived only in special forms of
-  musical notation such as via the editio vaticana dating back to the
-  beginning of the 20th century.
-
+  "A custos is a staff context symbol that appears at the end of a\n\
+  staff line with monophonic musical contents (i.e. with a single\n\
+  voice).  It anticipates the pitch of the first note of the following\n\
+  line and thus helps the player or singer to manage line breaks\n\
+  during performance, thus enhancing readability of a score.\n\
+\n\
+  Custodes were frequently used in music notation until the 16th\n\
+  century.  There were different appearences for different notation\n\
+  styles.  Nowadays, they have survived only in special forms of\n\
+  musical notation such as via the editio vaticana dating back to the\n\
+  beginning of the 20th century.\n\
+\n\
 [TODO: add to glossary]",
   "style adjust-if-on-staffline neutral-direction neutral-position");
--- lilypond-1.6.11/lily/dot-column-engraver.cc.orig	2002-07-26 02:23:29.000000000 +0200
+++ lilypond-1.6.11/lily/dot-column-engraver.cc	2003-08-24 17:21:05.225588400 +0200
@@ -80,8 +80,8 @@
 
 
 ENTER_DESCRIPTION(Dot_column_engraver,
-/* descr */       " Engraves dots on dotted notes shifted to the right of the note.
-If omitted, then dots appear on top of the notes.
+/* descr */       " Engraves dots on dotted notes shifted to the right of the note.\n\
+If omitted, then dots appear on top of the notes.\n\
 ",
 /* creats*/       "DotColumn",
 /* acks  */       "rhythmic-head-interface dot-column-interface stem-interface",
--- lilypond-1.6.11/lily/dots.cc.orig	2002-04-02 14:24:29.000000000 +0200
+++ lilypond-1.6.11/lily/dots.cc	2003-08-24 17:21:20.252303992 +0200
@@ -76,8 +76,8 @@
 
 
 ADD_INTERFACE (Dots, "dots-interface",
-  "The dots to go with a notehead/rest.  A separate interface, since they
-are a party in collision resolution.
+  "The dots to go with a notehead/rest.  A separate interface, since they\n\
+are a party in collision resolution.\n\
 #'direction is the Direction to handle staff-line collisions in.",
   "direction dot-count");
 
--- lilypond-1.6.11/lily/duration.cc.orig	2003-07-02 18:21:12.000000000 +0200
+++ lilypond-1.6.11/lily/duration.cc	2003-08-24 17:22:15.357926664 +0200
@@ -137,18 +137,18 @@
 LY_DEFINE(make_duration,
 	  "make-duration", 2, 2, 0, (SCM length, SCM dotcount,
 				     SCM num, SCM den),
-	  "
-@var{length} is the negative logarithm (base 2) of the duration:
-1 is a half note, 2 is a quarter note, 3 is an eighth
-note, etc.  The number of dots after the note is given by
-@var{dotcount}.
-
-The duration factor is optionally given by @var{num} and @var{den}.
-
-A duration is a musical duration, i.e. a length of time described by a
-power of two (whole, half, quarter, etc.) and a number of augmentation
-dots. 
-
+	  "\n\
+@var{length} is the negative logarithm (base 2) of the duration:\n\
+1 is a half note, 2 is a quarter note, 3 is an eighth\n\
+note, etc.  The number of dots after the note is given by\n\
+@var{dotcount}.\n\
+\n\
+The duration factor is optionally given by @var{num} and @var{den}.\n\
+\n\
+A duration is a musical duration, i.e. a length of time described by a\n\
+power of two (whole, half, quarter, etc.) and a number of augmentation\n\
+dots. \n\
+\n\
 ")
 {
   SCM_ASSERT_TYPE(gh_number_p (length), length, SCM_ARG1, __FUNCTION__, "integer");
@@ -182,7 +182,7 @@
 
 LY_DEFINE(duration_log,
 	  "duration-log", 1, 0, 0, (SCM dur),
-	  "
+	  "\n\
 Extract the duration log from @var{dur}"
 )
 {
@@ -194,7 +194,7 @@
 
 LY_DEFINE(dot_count_log,
 	  "duration-dot-count", 1, 0, 0, (SCM dur),
-	  "
+	  "\n\
 Extract the dot count from @var{dur}"
 )
 {
@@ -206,7 +206,7 @@
 
 LY_DEFINE(ly_intlog2,
 	  "intlog2", 1, 0, 0, (SCM d),
-	  "
+	  "\n\
 Extract the dot count from @var{dur}"
 )
 {
@@ -219,7 +219,7 @@
 
 LY_DEFINE(compression_factor,
 	  "duration-factor", 1, 0, 0, (SCM dur),
-	  "
+	  "\n\
 Extract the compression factor from @var{dur}. Return as a pair."
 )
 {
--- lilypond-1.6.11/lily/dynamic-engraver.cc.orig	2002-08-18 03:10:35.000000000 +0200
+++ lilypond-1.6.11/lily/dynamic-engraver.cc	2003-08-24 17:22:38.449416224 +0200
@@ -426,10 +426,10 @@
     }
 }
 ENTER_DESCRIPTION(Dynamic_engraver,
-/* descr */       "
-This engraver creates hairpins, dynamic texts, and their vertical
-alignments.  The symbols are collected onto a DynamicLineSpanner grob
-which takes care of vertical positioning.  
+/* descr */       "\n\
+This engraver creates hairpins, dynamic texts, and their vertical\n\
+alignments.  The symbols are collected onto a DynamicLineSpanner grob\n\
+which takes care of vertical positioning.  \n\
 ",
 		  
 /* creats*/       "DynamicLineSpanner DynamicText Hairpin TextSpanner",
--- lilypond-1.6.11/lily/font-interface.cc.orig	2002-08-14 13:36:35.000000000 +0200
+++ lilypond-1.6.11/lily/font-interface.cc	2003-08-24 17:24:47.734761864 +0200
@@ -74,18 +74,18 @@
 
 LY_DEFINE(ly_font_interface_get_font,"ly-get-font", 2, 0, 0,
 	  (SCM grob, SCM alist),
-	  "Return a font metric satisfying the font-qualifiers in @var{alist}.
-
-
-The font object represents the metric information of a font. Every font
-that is loaded into LilyPond can be accessed via Scheme. 
-
-LilyPond only needs to know the dimension of glyph to be able to process
-them. This information is stored in font metric files. LilyPond can read
-two types of font-metrics: @TeX{} Font Metric files (TFM files) and
-Adobe Font Metric files (AFM files).  LilyPond will always try to load
-AFM files first since they are more versatile.
-
+	  "Return a font metric satisfying the font-qualifiers in @var{alist}.\n\
+\n\
+\n\
+The font object represents the metric information of a font. Every font\n\
+that is loaded into LilyPond can be accessed via Scheme. \n\
+\n\
+LilyPond only needs to know the dimension of glyph to be able to process\n\
+them. This information is stored in font metric files. LilyPond can read\n\
+two types of font-metrics: @TeX{} Font Metric files (TFM files) and\n\
+Adobe Font Metric files (AFM files).  LilyPond will always try to load\n\
+AFM files first since they are more versatile.\n\
+\n\
 ")
 {
   Grob * gr  = unsmob_grob (grob);
--- lilypond-1.6.11/lily/font-metric.cc.orig	2002-09-14 01:08:08.000000000 +0200
+++ lilypond-1.6.11/lily/font-metric.cc	2003-08-24 17:25:06.565899096 +0200
@@ -146,7 +146,7 @@
 
 LY_DEFINE(ly_find_glyph_by_name, "ly-find-glyph-by-name", 2 , 0, 0,
 	  (SCM font, SCM name),
-	  "This function retrieves a Molecule for the glyph named @var{name} in
+	  "This function retrieves a Molecule for the glyph named @var{name} in\n\
 @var{font}.  The font must be available as an AFM file.")
 {
   Font_metric *fm = unsmob_metrics (font);
@@ -159,8 +159,8 @@
 
 LY_DEFINE(ly_text_dimension,"ly-text-dimension", 2 , 0, 0,
 	  (SCM font, SCM text),
-	  "Given the font metric in @var{font} and the string @var{text}, compute
-the extents of that text in that font. The return value is a pair of
+	  "Given the font metric in @var{font} and the string @var{text}, compute\n\
+the extents of that text in that font. The return value is a pair of\n\
 number-pairs.")
 {
   Box b;
--- lilypond-1.6.11/lily/forbid-break-engraver.cc.orig	2002-07-12 01:07:09.000000000 +0200
+++ lilypond-1.6.11/lily/forbid-break-engraver.cc	2003-08-24 17:25:32.980883408 +0200
@@ -13,7 +13,7 @@
 Forbid_line_break_engraver::Forbid_line_break_engraver(){}
 
 ENTER_DESCRIPTION(Forbid_line_break_engraver,
-/* descr */       "Forbid line breaks when note heads are still playing
+/* descr */       "Forbid line breaks when note heads are still playing\n\
 at some point.",
 /* creats*/       "",
 /* acks  */       "",
--- lilypond-1.6.11/lily/grob.cc.orig	2002-09-19 23:31:00.000000000 +0200
+++ lilypond-1.6.11/lily/grob.cc	2003-08-24 17:26:58.966811560 +0200
@@ -828,37 +828,37 @@
 IMPLEMENT_TYPE_P (Grob, "ly-grob?");
 
 ADD_INTERFACE (Grob, "grob-interface",
-  "In music notation, lots of symbols are related in some way.  You can
-think of music notation as a graph where nodes are formed by the
-symbols, and the arcs by their relations. A grob is a node in that
-graph.  The directed edges in the graph are formed by references to
-other grobs (i.e. pointers).  This big graph of grobs specifies the
-notation problem. The solution of this problem is a description of the
-printout in closed form, i.e. a list of values.  These values are
-Molecules.
-
-All grobs have an X and Y-position on the page.  These X and Y positions
-are stored in a relative format, so they can easily be combined by
-stacking them, hanging one grob to the side of another, and coupling
-them into a grouping-grob.
-
-Each grob has a reference point (a.k.a.  parent): the position of a grob
-is stored relative to that reference point. For example the X-reference
-point of a staccato dot usually is the note head that it applies
-to. When the note head is moved, the staccato dot moves along
-automatically.
-
-A grob is often associated with a symbol, but some grobs do not print
-any symbols. They take care of grouping objects. For example, there is a
-separate grob that stacks staves vertically. The @ref{NoteCollision}
-is also an abstract grob: it only moves around chords, but doesn't print
-anything.
+  "In music notation, lots of symbols are related in some way.  You can\n\
+think of music notation as a graph where nodes are formed by the\n\
+symbols, and the arcs by their relations. A grob is a node in that\n\
+graph.  The directed edges in the graph are formed by references to\n\
+other grobs (i.e. pointers).  This big graph of grobs specifies the\n\
+notation problem. The solution of this problem is a description of the\n\
+printout in closed form, i.e. a list of values.  These values are\n\
+Molecules.\n\
+\n\
+All grobs have an X and Y-position on the page.  These X and Y positions\n\
+are stored in a relative format, so they can easily be combined by\n\
+stacking them, hanging one grob to the side of another, and coupling\n\
+them into a grouping-grob.\n\
+\n\
+Each grob has a reference point (a.k.a.  parent): the position of a grob\n\
+is stored relative to that reference point. For example the X-reference\n\
+point of a staccato dot usually is the note head that it applies\n\
+to. When the note head is moved, the staccato dot moves along\n\
+automatically.\n\
+\n\
+A grob is often associated with a symbol, but some grobs do not print\n\
+any symbols. They take care of grouping objects. For example, there is a\n\
+separate grob that stacks staves vertically. The @ref{NoteCollision}\n\
+is also an abstract grob: it only moves around chords, but doesn't print\n\
+anything.\n\
 ",
-  "X-offset-callbacks Y-offset-callbacks X-extent-callback molecule cause
-Y-extent-callback molecule-callback extra-offset spacing-procedure
-staff-symbol interfaces dependencies X-extent Y-extent extra-X-extent
-causes meta layer before-line-breaking-callback
-after-line-breaking-callback extra-Y-extent minimum-X-extent
+  "X-offset-callbacks Y-offset-callbacks X-extent-callback molecule cause\n\
+Y-extent-callback molecule-callback extra-offset spacing-procedure\n\
+staff-symbol interfaces dependencies X-extent Y-extent extra-X-extent\n\
+causes meta layer before-line-breaking-callback\n\
+after-line-breaking-callback extra-Y-extent minimum-X-extent\n\
 minimum-Y-extent transparent");
 
 
--- lilypond-1.6.11/lily/grob-pq-engraver.cc.orig	2002-09-04 23:27:01.000000000 +0200
+++ lilypond-1.6.11/lily/grob-pq-engraver.cc	2003-08-24 17:27:51.667799792 +0200
@@ -139,8 +139,8 @@
 
 
 ENTER_DESCRIPTION(Grob_pq_engraver,
-/* descr */       "Administrate when certain grobs (eg. note heads) stop playing; this
-engraver is a sort-of a failure, since it doesn't handle all sorts of borderline cases very well.
+/* descr */       "Administrate when certain grobs (eg. note heads) stop playing; this\n\
+engraver is a sort-of a failure, since it doesn't handle all sorts of borderline cases very well.\n\
 ",
 /* creats*/       "",
 /* acks  */       "grob-interface",
--- lilypond-1.6.11/lily/grob-scheme.cc.orig	2002-07-28 12:37:28.000000000 +0200
+++ lilypond-1.6.11/lily/grob-scheme.cc	2003-08-24 17:29:13.987285328 +0200
@@ -22,27 +22,27 @@
 
 LY_DEFINE(ly_get_grob_property,
 	  "ly-get-grob-property", 2, 0, 0, (SCM grob, SCM sym),
-	  "Get the value of a value in grob @var{g} of property @var{sym}. It
-will return @code{'()} (end-of-list) if @var{g} doesn't have @var{sym} set.
-
-Grob properties are stored as GUILE association lists, with symbols as
-keys. All lookup functions identify undefined properties with
-end-of-list (i.e. @code{'()} in Scheme or @code{SCM_EOL} in C)
-
-Properties are stored in two ways:
-@itemize @bullet
-@item mutable properties.
-Grob properties that change from object to object. The storage of
-these are private to a grob. For example pointers to other grobs are
-always stored in the mutable properties.
-
-@item immutable properties.
-Grob properties that are shared across different grobs of the same
-type. The storage is shared, and hence it is read-only. Typically, this
-is used to store function callbacks, and default settings. They are
-initially read from @file{scm/grob-description.scm}.
-@end itemize
-
+	  "Get the value of a value in grob @var{g} of property @var{sym}. It\n\
+will return @code{'()} (end-of-list) if @var{g} doesn't have @var{sym} set.\n\
+\n\
+Grob properties are stored as GUILE association lists, with symbols as\n\
+keys. All lookup functions identify undefined properties with\n\
+end-of-list (i.e. @code{'()} in Scheme or @code{SCM_EOL} in C)\n\
+\n\
+Properties are stored in two ways:\n\
+@itemize @bullet\n\
+@item mutable properties.\n\
+Grob properties that change from object to object. The storage of\n\
+these are private to a grob. For example pointers to other grobs are\n\
+always stored in the mutable properties.\n\
+\n\
+@item immutable properties.\n\
+Grob properties that are shared across different grobs of the same\n\
+type. The storage is shared, and hence it is read-only. Typically, this\n\
+is used to store function callbacks, and default settings. They are\n\
+initially read from @file{scm/grob-description.scm}.\n\
+@end itemize\n\
+\n\
 ")
 {
   Grob * sc = unsmob_grob (grob);
@@ -54,8 +54,8 @@
 
 LY_DEFINE(spanner_get_bound, "ly-get-spanner-bound", 2 , 0, 0,
 	  (SCM slur, SCM dir),
-	  "Get one of the bounds of @var{spanner}. @var{dir} may be @code{-1} for
-left, and @code{1} for right.
+	  "Get one of the bounds of @var{spanner}. @var{dir} may be @code{-1} for\n\
+left, and @code{1} for right.\n\
 ")
 {
   Spanner * sl = dynamic_cast<Spanner*> (unsmob_grob (slur));
@@ -79,7 +79,7 @@
 
 LY_DEFINE(ly_get_extent, "ly-get-extent", 3, 0, 0,
 	  (SCM grob, SCM refp, SCM axis),
-	  "Get the extent in @var{axis} direction of @var{grob} relative to the
+	  "Get the extent in @var{axis} direction of @var{grob} relative to the\n\
 grob @var{refp}")
 {
   Grob * sc = unsmob_grob (grob);
@@ -93,7 +93,7 @@
 }
 
 LY_DEFINE (ly_get_parent,   "ly-get-parent", 2, 0, 0, (SCM grob, SCM axis),
-	   "Get the parent of @var{grob}.  @var{axis} can be 0 for the X-axis, 1
+	   "Get the parent of @var{grob}.  @var{axis} can be 0 for the X-axis, 1\n\
 for the Y-axis.")
 {
   Grob * sc = unsmob_grob (grob);
@@ -108,8 +108,8 @@
 LY_DEFINE (get_system,
 	   "get-system",
 	   1, 0, 0, (SCM grob),
-	   "
-Return the System Grob of @var{grob}.
+	   "\n\
+Return the System Grob of @var{grob}.\n\
 ")
 {
   Grob *me = unsmob_grob (grob);
@@ -125,8 +125,8 @@
 LY_DEFINE (get_original,
 	   "get-original",
 	   1, 0, 0, (SCM grob),
-	   "
-Return the original Grob of @var{grob}
+	   "\n\
+Return the original Grob of @var{grob}\n\
 ")
 {
   Grob *me = unsmob_grob (grob);
@@ -143,8 +143,8 @@
 
 LY_DEFINE (get_broken_into,
 	  "get-broken-into", 1, 0, 0, (SCM spanner),
-	   "
-Return broken-into list for @var{spanner}.
+	   "\n\
+Return broken-into list for @var{spanner}.\n\
 "
 )
 {
--- lilypond-1.6.11/lily/hara-kiri-group-spanner.cc.orig	2002-07-11 12:55:24.000000000 +0200
+++ lilypond-1.6.11/lily/hara-kiri-group-spanner.cc	2003-08-24 17:29:35.148068400 +0200
@@ -94,9 +94,9 @@
 
 
 ADD_INTERFACE (Hara_kiri_group_spanner,"hara-kiri-group-interface",
-  "  As Vertical_group_spanner, but keep track of interesting items.  If
-we don't contain any interesting items after linebreaking, then
-gracefully commit suicide.  Objective: don't disgrace Lily by
+  "  As Vertical_group_spanner, but keep track of interesting items.  If\n\
+we don't contain any interesting items after linebreaking, then\n\
+gracefully commit suicide.  Objective: don't disgrace Lily by\n\
 typesetting empty lines in orchestral scores.",
   "items-worth-living");
 
--- lilypond-1.6.11/lily/hyphen-spanner.cc.orig	2002-07-26 02:23:28.000000000 +0200
+++ lilypond-1.6.11/lily/hyphen-spanner.cc	2003-08-24 17:29:56.910759968 +0200
@@ -117,8 +117,8 @@
 
 
 ADD_INTERFACE (Hyphen_spanner, "lyric-hyphen-interface",
-  "A centred hyphen is a simple line between lyrics used to divide
-syllables.   The length of the hyphen line should stretch based on the
+  "A centred hyphen is a simple line between lyrics used to divide\n\
+syllables.   The length of the hyphen line should stretch based on the\n\
 size of the gap between syllables.",
   "thickness height minimum-length maximum-length word-space");
 
--- lilypond-1.6.11/lily/input-file-results.cc.orig	2002-08-17 03:30:28.000000000 +0200
+++ lilypond-1.6.11/lily/input-file-results.cc	2003-08-24 17:30:24.534560512 +0200
@@ -34,8 +34,8 @@
 
 LY_DEFINE(ly_set_point_and_click_x, "set-point-and-click!", 1, 0, 0,
 	  (SCM what),
-	  "Set the options for Point-and-click source specials output. The
-argument is a symbol.  Possible options are @code{none} (no source specials),
+	  "Set the options for Point-and-click source specials output. The\n\
+argument is a symbol.  Possible options are @code{none} (no source specials),\n\
 @code{line} and @code{line-column}")
 {
   /*
--- lilypond-1.6.11/lily/input-smob.cc.orig	2002-07-26 02:23:28.000000000 +0200
+++ lilypond-1.6.11/lily/input-smob.cc	2003-08-24 17:30:54.817956736 +0200
@@ -47,7 +47,7 @@
 }
 
 LY_DEFINE(ly_input_message,  "ly-input-message", 2, 0, 0, (SCM sip, SCM msg),
-	  "Print @var{msg} as a GNU compliant error message, pointing to the
+	  "Print @var{msg} as a GNU compliant error message, pointing to the\n\
 location in @var{sip}.")
 {
   Input *ip  = unsmob_input(sip);
--- lilypond-1.6.11/lily/instrument-name-engraver.cc.orig	2002-07-26 02:23:28.000000000 +0200
+++ lilypond-1.6.11/lily/instrument-name-engraver.cc	2003-08-24 17:31:12.863213440 +0200
@@ -122,9 +122,9 @@
 
 
 ENTER_DESCRIPTION(Instrument_name_engraver,
-/* descr */       " Prints the name of the instrument (specified by
-@code{Staff.instrument} and @code{Staff.instr})
-at the left of the
+/* descr */       " Prints the name of the instrument (specified by\n\
+@code{Staff.instrument} and @code{Staff.instr})\n\
+at the left of the\n\
 staff.",
 /* creats*/       "InstrumentName",
 /* acks  */       "bar-line-interface axis-group-interface",
--- lilypond-1.6.11/lily/item.cc.orig	2002-09-08 02:00:40.000000000 +0200
+++ lilypond-1.6.11/lily/item.cc	2003-08-24 17:31:33.439085432 +0200
@@ -193,12 +193,12 @@
 
 ADD_INTERFACE(Item,
 	      "item-interface",
-	      "
-
-Grobs can be distinguished in their role in the horizontal spacing.
-Many grobs define constraints on the spacing by their sizes. For
-example, note heads, clefs, stems, and all other symbols with a fixed
-shape.  These grobs form a subtype called @code{Item}.
-
+	      "\n\
+\n\
+Grobs can be distinguished in their role in the horizontal spacing.\n\
+Many grobs define constraints on the spacing by their sizes. For\n\
+example, note heads, clefs, stems, and all other symbols with a fixed\n\
+shape.  These grobs form a subtype called @code{Item}.\n\
+\n\
 ",
 	      "no-spacing-rods break-visibility breakable")
--- lilypond-1.6.11/lily/lily-guile.cc.orig	2002-09-10 01:42:35.000000000 +0200
+++ lilypond-1.6.11/lily/lily-guile.cc	2003-08-24 17:36:22.320168832 +0200
@@ -108,9 +108,9 @@
 
 LY_DEFINE(ly_gulp_file, "ly-gulp-file", 1,0, 0,
 	  (SCM name),
-	  "Read the file named @var{name}, and return its contents in a string. The
-file is looked up using the lilypond search path.
-
+	  "Read the file named @var{name}, and return its contents in a string. The\n\
+file is looked up using the lilypond search path.\n\
+\n\
 ")
 {
   return scm_makfrom0str (gulp_file_to_string (ly_scm2string (name)).to_str0 ());
@@ -164,8 +164,8 @@
 }
 
 LY_DEFINE(ly_isdir,  "dir?", 1,0, 0,  (SCM s),
-	  "type predicate. A direction is a -1, 0 or 1, where -1 represents left or
-down and 1 represents right or up.
+	  "type predicate. A direction is a -1, 0 or 1, where -1 represents left or\n\
+down and 1 represents right or up.\n\
 ")
 {
   if (gh_number_p (s))
@@ -311,8 +311,8 @@
    
 LY_DEFINE(ly_number2string,  "ly-number->string", 1, 0,0,
 	  (SCM s),
-	  " converts @var{num} to a string without generating many decimals. It
-leaves a space at the end.
+	  " converts @var{num} to a string without generating many decimals. It\n\
+leaves a space at the end.\n\
 ")
 {
   SCM_ASSERT_TYPE (gh_number_p (s), s, SCM_ARG1, __FUNCTION__, "number");
@@ -364,8 +364,8 @@
 
 #include "version.hh"
 LY_DEFINE(ly_version,  "ly-version", 0, 0, 0, (),
-	  "Return the current lilypond version as a list, e.g.
-@code{(1 3 127 uu1)}. 
+	  "Return the current lilypond version as a list, e.g.\n\
+@code{(1 3 127 uu1)}. \n\
 ")
 {
   char const* vs =  "\' (" MAJOR_VERSION " " MINOR_VERSION " "  PATCH_LEVEL " " MY_PATCH_LEVEL ")" ;
--- lilypond-1.6.11/lily/line-spanner.cc.orig	2002-07-26 02:23:28.000000000 +0200
+++ lilypond-1.6.11/lily/line-spanner.cc	2003-08-24 17:37:11.854638448 +0200
@@ -261,7 +261,7 @@
 
 
 ADD_INTERFACE (Line_spanner, "line-spanner-interface",
-  "Generic line drawn between two objects, eg. for use with glissandi.
+  "Generic line drawn between two objects, eg. for use with glissandi.\n\
 gap is measured in staff-spaces.   ",
   "gap dash-period dash-length thickness type");
 
--- lilypond-1.6.11/lily/lookup.cc.orig	2002-07-26 02:23:28.000000000 +0200
+++ lilypond-1.6.11/lily/lookup.cc	2003-08-24 17:37:50.688734768 +0200
@@ -557,8 +557,8 @@
 LY_DEFINE(ly_bracket ,"ly-bracket",
 	  4, 0, 0,
 	  (SCM a, SCM iv, SCM t, SCM p),
-	  "Make a bracket in direction @var{a}. The extent of the bracket is
-given by @var{iv}. The wings protude by an amount of @var{p}, which
+	  "Make a bracket in direction @var{a}. The extent of the bracket is\n\
+given by @var{iv}. The wings protude by an amount of @var{p}, which\n\
 may be negative. The thickness is given by @var{t}.")
 {
   SCM_ASSERT_TYPE(ly_axis_p (a), a, SCM_ARG1, __FUNCTION__, "axis") ;
--- lilypond-1.6.11/lily/lyric-extender.cc.orig	2002-07-26 02:23:28.000000000 +0200
+++ lilypond-1.6.11/lily/lyric-extender.cc	2003-08-24 17:38:36.521767088 +0200
@@ -67,6 +67,6 @@
 
 
 ADD_INTERFACE (Lyric_extender,"lyric-extender-interface",
-  "The extender is a simple line at the baseline of the lyric
+  "The extender is a simple line at the baseline of the lyric\n\
 that helps show the length of a melissima (tied/slurred note).",
   "word-space height right-trim-amount");
--- lilypond-1.6.11/lily/lyric-phrasing-engraver.cc.orig	2002-08-04 18:56:18.000000000 +0200
+++ lilypond-1.6.11/lily/lyric-phrasing-engraver.cc	2003-08-24 17:39:18.473389472 +0200
@@ -354,11 +354,11 @@
 
 
 ENTER_DESCRIPTION(Lyric_phrasing_engraver,
-		  /* descr */       "
-This engraver combines note heads and lyrics for alignment.
-
-This engraver is switched on by default. Turn it off for faster
-processing of orchestral scores.
+		  /* descr */       "\n\
+This engraver combines note heads and lyrics for alignment.\n\
+\n\
+This engraver is switched on by default. Turn it off for faster\n\
+processing of orchestral scores.\n\
 ",
 		  /* creats*/       "",
 		  /* acks  */       "lyric-syllable-interface note-head-interface lyric-extender-interface",
--- lilypond-1.6.11/lily/molecule.cc.orig	2002-10-05 00:45:43.000000000 +0200
+++ lilypond-1.6.11/lily/molecule.cc	2003-08-24 17:41:36.076470624 +0200
@@ -137,11 +137,11 @@
 
 LY_DEFINE(ly_set_molecule_extent_x,"ly-set-molecule-extent!", 3 , 0, 0, 
 	  (SCM mol, SCM axis, SCM np),
-	  "Set the extent (@var{extent} must be a pair of numbers) of @var{mol} in 
-@var{axis} direction (0 or 1 for x- and y-axis respectively).
-
-Note that an extent @code{(A . B)} is an interval and hence @code{A} is
-smaller than @code{B}, and is often negative.
+	  "Set the extent (@var{extent} must be a pair of numbers) of @var{mol} in \n\
+@var{axis} direction (0 or 1 for x- and y-axis respectively).\n\
+\n\
+Note that an extent @code{(A . B)} is an interval and hence @code{A} is\n\
+smaller than @code{B}, and is often negative.\n\
 5")
 {
   Molecule* m = unsmob_molecule (mol);
@@ -157,8 +157,8 @@
 
 LY_DEFINE(ly_get_molecule_extent,
 	  "ly-get-molecule-extent", 2 , 0, 0,  (SCM mol, SCM axis),
-	  "Return a pair of numbers signifying the extent of @var{mol} in
-@var{axis} direction (0 or 1 for x and y axis respectively).
+	  "Return a pair of numbers signifying the extent of @var{mol} in\n\
+@var{axis} direction (0 or 1 for x and y axis respectively).\n\
 ")
 {
   Molecule *m = unsmob_molecule (mol);
@@ -173,9 +173,9 @@
 	  "ly-combine-molecule-at-edge",
 	  5 , 0, 0,  (SCM first, SCM axis, SCM direction,
 		      SCM second, SCM padding),
-	  "Construct a molecule by putting @var{second} next to
-@var{first}. @var{axis} can be 0 (x-axis) or 1 (y-axis), @var{direction} can be
--1 (left or down) or 1 (right or up).  @var{padding} specifies extra
+	  "Construct a molecule by putting @var{second} next to\n\
+@var{first}. @var{axis} can be 0 (x-axis) or 1 (y-axis), @var{direction} can be\n\
+-1 (left or down) or 1 (right or up).  @var{padding} specifies extra\n\
 space to add in between measured in global staff space.")
 
 {
@@ -220,37 +220,37 @@
 
 LY_DEFINE(ly_make_molecule,
 	  "ly-make-molecule", 3, 0, 0,  (SCM expr, SCM xext, SCM yext),
-	  "
-The objective of any typesetting system is to put ink on paper in the
-right places. For LilyPond, this final stage is left to the @TeX{} and
-the printer subsystem. For lily, the last stage in processing a score is
-outputting a description of what to put where.  This description roughly
-looks like
-@example
-        PUT glyph AT (x,y)
-        PUT glyph AT (x,y)
-        PUT glyph AT (x,y) 
-@end example
-you merely have to look at the tex output of lily to see this.
-Internally these instructions are encoded in Molecules.@footnote{At some
-point LilyPond also contained Atom-objects, but they have been replaced
-by Scheme expressions, making the name outdated.}  A molecule is
-what-to-print-where information that also contains dimension information
-(how large is this glyph?).
-
-Conceptually, Molecules can be constructed from Scheme code, by
-translating a Molecule and by combining two molecules. In BNF
-notation:
-
-@example
-Molecule  :: COMBINE Molecule Molecule
-           | TRANSLATE Offset Molecule
-           | GLYPH-DESCRIPTION
-           ;
-@end example
-
-If you are interested in seeing how this information is stored, you
-can run with the @code{-f scm} option. The scheme expressions are then
+	  "\n\
+The objective of any typesetting system is to put ink on paper in the\n\
+right places. For LilyPond, this final stage is left to the @TeX{} and\n\
+the printer subsystem. For lily, the last stage in processing a score is\n\
+outputting a description of what to put where.  This description roughly\n\
+looks like\n\
+@example\n\
+        PUT glyph AT (x,y)\n\
+        PUT glyph AT (x,y)\n\
+        PUT glyph AT (x,y) \n\
+@end example\n\
+you merely have to look at the tex output of lily to see this.\n\
+Internally these instructions are encoded in Molecules.@footnote{At some\n\
+point LilyPond also contained Atom-objects, but they have been replaced\n\
+by Scheme expressions, making the name outdated.}  A molecule is\n\
+what-to-print-where information that also contains dimension information\n\
+(how large is this glyph?).\n\
+\n\
+Conceptually, Molecules can be constructed from Scheme code, by\n\
+translating a Molecule and by combining two molecules. In BNF\n\
+notation:\n\
+\n\
+@example\n\
+Molecule  :: COMBINE Molecule Molecule\n\
+           | TRANSLATE Offset Molecule\n\
+           | GLYPH-DESCRIPTION\n\
+           ;\n\
+@end example\n\
+\n\
+If you are interested in seeing how this information is stored, you\n\
+can run with the @code{-f scm} option. The scheme expressions are then\n\
 dumped in the output file.")
 {
   SCM_ASSERT_TYPE (ly_number_pair_p (xext), xext, SCM_ARG2, __FUNCTION__, "number pair");
--- lilypond-1.6.11/lily/moment.cc.orig	2002-07-26 02:23:28.000000000 +0200
+++ lilypond-1.6.11/lily/moment.cc	2003-08-24 17:42:19.534863944 +0200
@@ -48,13 +48,13 @@
   TODO: add optional factor argument.
  */
 LY_DEFINE (make_moment,"make-moment", 2,0,0, (SCM n, SCM d),
-	   "create the rational number with main timing @var{n}/@var{d}. 
-
-
-Moment is a point in musical time. It is consists of a pair of
-rationals (@var{m},@var{g}), where @var{m} is the timing for the  main
-notes, and @var{g} the timing for  grace notes. In absence of grace
-notes, @var{g} is zero.
+	   "create the rational number with main timing @var{n}/@var{d}. \n\
+\n\
+\n\
+Moment is a point in musical time. It is consists of a pair of\n\
+rationals (@var{m},@var{g}), where @var{m} is the timing for the  main\n\
+notes, and @var{g} the timing for  grace notes. In absence of grace\n\
+notes, @var{g} is zero.\n\
 ")
 {
   Moment m (Rational (1,1));
--- lilypond-1.6.11/lily/multi-measure-rest.cc.orig	2003-05-16 01:07:02.000000000 +0200
+++ lilypond-1.6.11/lily/multi-measure-rest.cc	2003-08-24 17:42:38.343004672 +0200
@@ -330,9 +330,9 @@
 
 
 ADD_INTERFACE (Multi_measure_rest,"multi-measure-rest-interface",
-  "A rest that spans a whole number of measures.  For typesetting the
-numbers, fields from font-interface may be used.
-
-
+  "A rest that spans a whole number of measures.  For typesetting the\n\
+numbers, fields from font-interface may be used.\n\
+\n\
+\n\
 ",
   "expand-limit measure-count number-threshold padding thickness minimum-length");
--- lilypond-1.6.11/lily/multi-measure-rest-engraver.cc.orig	2003-05-16 01:01:28.000000000 +0200
+++ lilypond-1.6.11/lily/multi-measure-rest-engraver.cc	2003-08-24 17:43:04.461034128 +0200
@@ -182,8 +182,8 @@
 }
 
 ENTER_DESCRIPTION(Multi_measure_rest_engraver,
-/* descr */       "Engraves multi-measure rests that are produced with @code{R}.  Reads
-measurePosition and currentBarNumber to determine what number to print over the MultiMeasureRest
+/* descr */       "Engraves multi-measure rests that are produced with @code{R}.  Reads\n\
+measurePosition and currentBarNumber to determine what number to print over the MultiMeasureRest\n\
 ",
 /* creats*/       "MultiMeasureRest",
 /* acks  */       "",
--- lilypond-1.6.11/lily/music.cc.orig	2002-09-14 01:08:31.000000000 +0200
+++ lilypond-1.6.11/lily/music.cc	2003-08-24 17:43:33.372638896 +0200
@@ -250,14 +250,14 @@
 // to do  property args 
 LY_DEFINE(ly_make_music,
 	  "ly-make-music", 1, 0, 0,  (SCM type),
-	  "
-Make a music object/expression of type @var{name}. Warning: this
-interface will likely change in the near future.
-
-
-
-Music is the data type that music expressions are stored in. The data
-type does not yet offer many manipulations.
+	  "\n\
+Make a music object/expression of type @var{name}. Warning: this\n\
+interface will likely change in the near future.\n\
+\n\
+\n\
+\n\
+Music is the data type that music expressions are stored in. The data\n\
+type does not yet offer many manipulations.\n\
 ")
 {
   SCM_ASSERT_TYPE(gh_string_p (type), type, SCM_ARG1, __FUNCTION__, "string");
--- lilypond-1.6.11/lily/new-accidental-engraver.cc.orig	2002-07-29 14:30:24.000000000 +0200
+++ lilypond-1.6.11/lily/new-accidental-engraver.cc	2003-08-24 17:44:35.802148168 +0200
@@ -547,8 +547,8 @@
 
 
 ENTER_DESCRIPTION (New_accidental_engraver,
-"Make accidentals.  Catches note heads, ties and notices key-change
-events.  Due to interaction with ties (which don't come together
+"Make accidentals.  Catches note heads, ties and notices key-change\n\
+events.  Due to interaction with ties (which don't come together\n\
 with note heads), this needs to be in a context higher than Tie_engraver.",
 		   
 	       "Accidental",
--- lilypond-1.6.11/lily/note-collision.cc.orig	2002-08-12 12:44:56.000000000 +0200
+++ lilypond-1.6.11/lily/note-collision.cc	2003-08-24 17:45:00.551385712 +0200
@@ -431,9 +431,9 @@
 
 
 ADD_INTERFACE (Note_collision_interface, "note-collision-interface",
-  "An object that handles collisions between notes with different stem
-directions and horizontal shifts. Most of the interesting properties
-are to be set in @ref{note-column-interface}: these are
-@code{force-hshift} and @code{horizontal-shift}.
+  "An object that handles collisions between notes with different stem\n\
+directions and horizontal shifts. Most of the interesting properties\n\
+are to be set in @ref{note-column-interface}: these are\n\
+@code{force-hshift} and @code{horizontal-shift}.\n\
 ",
   "merge-differently-dotted merge-differently-headed collision-done");
--- lilypond-1.6.11/lily/note-head-line-engraver.cc.orig	2002-07-26 02:23:28.000000000 +0200
+++ lilypond-1.6.11/lily/note-head-line-engraver.cc	2003-08-24 17:46:01.679092888 +0200
@@ -151,7 +151,7 @@
 
 
 ENTER_DESCRIPTION(Note_head_line_engraver,
-/* descr */       "Engrave a line between two note heads, for example a glissando.
+/* descr */       "Engrave a line between two note heads, for example a glissando.\n\
 If followVoice is set, staff switches also generate a line.",
 /* creats*/       "Glissando VoiceFollower",
 /* acks  */       "rhythmic-head-interface",
--- lilypond-1.6.11/lily/output-property-engraver.cc.orig	2002-09-08 02:28:04.000000000 +0200
+++ lilypond-1.6.11/lily/output-property-engraver.cc	2003-08-24 17:46:48.577963176 +0200
@@ -81,7 +81,7 @@
 }
 
 ENTER_DESCRIPTION(Output_property_engraver,
-/* descr */       "Interpret Music of Output_property type, and apply a function
+/* descr */       "Interpret Music of Output_property type, and apply a function\n\
 to any Graphic objects that satisfies the predicate.",
 /* creats*/       "",
 /* acks  */       "grob-interface",
--- lilypond-1.6.11/lily/paper-column.cc.orig	2002-08-04 18:56:18.000000000 +0200
+++ lilypond-1.6.11/lily/paper-column.cc	2003-08-24 17:47:57.671459368 +0200
@@ -22,21 +22,21 @@
 
 
 ADD_INTERFACE (Paper_column, "paper-column-interface",
-  "  Paper_columns form the top-most item parent. (The Paper_columns X
-  parent is System, which is a spanner.)
-
-  Paper_columns form the units for the spacing engine. They are
-  numbered, the first (leftmost) is column 0. Numbering happens before
-  line-breaking, and columns are not renumbered after line breaking.
-
-  Since many columns go unused, you should only use the rank field to
-  get ordering information.  Two adjacent columns may have
-  non-adjacent numbers.
-
-  Don't be confused by right-items: each spacing wish can also contain
-  a number of items, with which a spacing constraint may be kept. It's
-  a little baroque, but it might come in handy later on?
-
+  "  Paper_columns form the top-most item parent. (The Paper_columns X\n\
+  parent is System, which is a spanner.)\n\
+\n\
+  Paper_columns form the units for the spacing engine. They are\n\
+  numbered, the first (leftmost) is column 0. Numbering happens before\n\
+  line-breaking, and columns are not renumbered after line breaking.\n\
+\n\
+  Since many columns go unused, you should only use the rank field to\n\
+  get ordering information.  Two adjacent columns may have\n\
+  non-adjacent numbers.\n\
+\n\
+  Don't be confused by right-items: each spacing wish can also contain\n\
+  a number of items, with which a spacing constraint may be kept. It's\n\
+  a little baroque, but it might come in handy later on?\n\
+\n\
 ",
   "between-cols between-system-string when bounded-by-me shortest-playing-duration shortest-starter-duration");
 
--- lilypond-1.6.11/lily/pitch.cc.orig	2002-08-04 18:56:18.000000000 +0200
+++ lilypond-1.6.11/lily/pitch.cc	2003-08-24 17:49:11.666210456 +0200
@@ -223,8 +223,8 @@
 LY_DEFINE(ly_pitch_transpose,
 	  "ly-transpose-pitch", 2, 0, 0,
 	  (SCM p, SCM delta),
-	  "Transpose @var{p} by the amount @var{delta}, where @var{delta} is the
-pitch that central C is transposed to.
+	  "Transpose @var{p} by the amount @var{delta}, where @var{delta} is the\n\
+pitch that central C is transposed to.\n\
 ")
 {
   Pitch* t = unsmob_pitch (p);
@@ -293,12 +293,12 @@
 
 LY_DEFINE(make_pitch, "make-pitch", 3, 0, 0, 
 	  (SCM o, SCM n, SCM a),
-	  "
-@var{octave} is specified by an integer, zero for the octave containing
-middle C.  @var{note} is a number from 0 to 6, with 0 corresponding to C
-and 6 corresponding to B.  The shift is zero for a natural, negative for
-flats, or positive for sharps.
-
+	  "\n\
+@var{octave} is specified by an integer, zero for the octave containing\n\
+middle C.  @var{note} is a number from 0 to 6, with 0 corresponding to C\n\
+and 6 corresponding to B.  The shift is zero for a natural, negative for\n\
+flats, or positive for sharps.\n\
+\n\
 ")
 {
   SCM_ASSERT_TYPE(gh_number_p (o), o, SCM_ARG1, __FUNCTION__, "number");
--- lilypond-1.6.11/lily/pitch-squash-engraver.cc.orig	2002-07-26 02:23:28.000000000 +0200
+++ lilypond-1.6.11/lily/pitch-squash-engraver.cc	2003-08-24 17:49:56.311423352 +0200
@@ -35,9 +35,9 @@
 }
 
 ENTER_DESCRIPTION(Pitch_squash_engraver,
-/* descr */       "Treat all pitches as middle C.  Note that the notes move, but
-the locations of accidentals stay the same. 
-Set the position field of all note heads to zero. This useful for
+/* descr */       "Treat all pitches as middle C.  Note that the notes move, but\n\
+the locations of accidentals stay the same. \n\
+Set the position field of all note heads to zero. This useful for\n\
 making a single line staff that demonstrates the rhythm of a melody.",
 /* creats*/       "",
 /* acks  */       "note-head-interface",
--- lilypond-1.6.11/lily/repeat-acknowledge-engraver.cc.orig	2002-08-04 18:56:18.000000000 +0200
+++ lilypond-1.6.11/lily/repeat-acknowledge-engraver.cc	2003-08-24 17:51:33.465653664 +0200
@@ -111,7 +111,7 @@
 }
 
 ENTER_DESCRIPTION(Repeat_acknowledge_engraver,
-/* descr */       "Acknowledge repeated music, and convert the contents of
+/* descr */       "Acknowledge repeated music, and convert the contents of\n\
 repeatCommands ainto an appropriate setting for whichBar",
 /* creats*/       "",
 /* acks  */       "",
--- lilypond-1.6.11/lily/rest-collision.cc.orig	2002-10-27 21:01:04.000000000 +0100
+++ lilypond-1.6.11/lily/rest-collision.cc	2003-08-24 17:52:09.434185616 +0200
@@ -244,7 +244,7 @@
 
 
 ADD_INTERFACE (Rest_collision,"rest-collision-interface",
-  "Move around ordinary rests (not multi-measure-rests) to avoid
+  "Move around ordinary rests (not multi-measure-rests) to avoid\n\
 conflicts.",
   "maximum-rest-count minimum-distance elements");
 
--- lilypond-1.6.11/lily/scm-option.cc.orig	2002-08-18 17:03:53.000000000 +0200
+++ lilypond-1.6.11/lily/scm-option.cc	2003-08-24 17:54:05.359562280 +0200
@@ -71,19 +71,19 @@
 Switch on any experimental features.  Not for general public use. */
 
 LY_DEFINE (ly_set_option, "ly-set-option", 2, 0, 0, (SCM var, SCM val),
-	    "Set a global option value.  Supported options include
-
-@table @code
-@item help
-List all options.
-@item midi-debug
-If set to true, generate human readable MIDI
-@item internal-type-checking
-Set paranoia for property assignments 
-@end table
-
-This function is useful to call from the command line: @code{lilypond -e
-\"(ly-set-option 'midi-debug #t)\"}.
+	    "Set a global option value.  Supported options include\n\
+\n\
+@table @code\n\
+@item help\n\
+List all options.\n\
+@item midi-debug\n\
+If set to true, generate human readable MIDI\n\
+@item internal-type-checking\n\
+Set paranoia for property assignments \n\
+@end table\n\
+\n\
+This function is useful to call from the command line: @code{lilypond -e\n\
+\"(ly-set-option 'midi-debug #t)\"}.\n\
 ")
 {
   if (var == ly_symbol2scm ("help"))
--- lilypond-1.6.11/lily/score-engraver.cc.orig	2002-09-12 23:54:11.000000000 +0200
+++ lilypond-1.6.11/lily/score-engraver.cc	2003-08-24 17:55:15.475902976 +0200
@@ -338,17 +338,17 @@
 
 
 ENTER_DESCRIPTION(Score_engraver,
-/* descr */       "Top level engraver. Takes care of generating columns and the complete  system (ie. System)
-
-
-This engraver decides whether a column is breakable. The default is
-that a column is always breakable. However, when every Bar_engraver
-that does not have a barline at a certain point will call
-Score_engraver::forbid_breaks to stop linebreaks.  In practice, this
-means that you can make a breakpoint by creating a barline (assuming
-that there are no beams or notes that prevent a breakpoint.)
-
-
+/* descr */       "Top level engraver. Takes care of generating columns and the complete  system (ie. System)\n\
+\n\
+\n\
+This engraver decides whether a column is breakable. The default is\n\
+that a column is always breakable. However, when every Bar_engraver\n\
+that does not have a barline at a certain point will call\n\
+Score_engraver::forbid_breaks to stop linebreaks.  In practice, this\n\
+means that you can make a breakpoint by creating a barline (assuming\n\
+that there are no beams or notes that prevent a breakpoint.)\n\
+\n\
+\n\
 ",
 /* creats*/       "System PaperColumn NonMusicalPaperColumn",
 /* acks  */       "note-spacing-interface staff-spacing-interface",
--- lilypond-1.6.11/lily/script-engraver.cc.orig	2002-08-31 01:35:00.000000000 +0200
+++ lilypond-1.6.11/lily/script-engraver.cc	2003-08-24 17:56:51.835254128 +0200
@@ -206,7 +206,7 @@
 Script_engraver::Script_engraver(){}
 
 ENTER_DESCRIPTION(Script_engraver,
-/* descr */       "    Handles note ornaments generated by @code{\\script}.  
+/* descr */       "    Handles note ornaments generated by @code{\\script}.  \n\
 ",
 /* creats*/       "Script",
 /* acks  */       "stem-interface rhythmic-head-interface note-column-interface",
--- lilypond-1.6.11/lily/separation-item.cc.orig	2002-08-09 15:40:44.000000000 +0200
+++ lilypond-1.6.11/lily/separation-item.cc	2003-08-24 17:58:51.005137552 +0200
@@ -135,10 +135,10 @@
 
 
 ADD_INTERFACE (Separation_item,"separation-item-interface",
-  "Item that computes widths to generate spacing rods.
-
-Calc dimensions for the Separating_group_spanner; this has to be
-an item to get dependencies correct.  It can't be an grob_group
-since these usually are in a different X_group
+  "Item that computes widths to generate spacing rods.\n\
+\n\
+Calc dimensions for the Separating_group_spanner; this has to be\n\
+an item to get dependencies correct.  It can't be an grob_group\n\
+since these usually are in a different X_group\n\
 ",
   "X-extent conditional-elements elements");
--- lilypond-1.6.11/lily/side-position-interface.cc.orig	2002-08-18 13:17:45.000000000 +0200
+++ lilypond-1.6.11/lily/side-position-interface.cc	2003-08-24 17:59:18.542951168 +0200
@@ -271,8 +271,8 @@
 
 
 ADD_INTERFACE (Side_position_interface,"side-position-interface",
-  "Position a victim object (this one) next to other objects (the
-support).  In this case, the direction signifies where to put the
-victim object relative to the support (left or right, up or down?)
+  "Position a victim object (this one) next to other objects (the\n\
+support).  In this case, the direction signifies where to put the\n\
+victim object relative to the support (left or right, up or down?)\n\
 ",
   "side-support-elements direction-source direction side-relative-direction minimum-space padding");
--- lilypond-1.6.11/lily/spaceable-grob.cc.orig	2002-08-12 12:44:56.000000000 +0200
+++ lilypond-1.6.11/lily/spaceable-grob.cc	2003-08-24 18:01:08.749197272 +0200
@@ -102,8 +102,8 @@
 
 
 ADD_INTERFACE (Spaceable_grob,"spaceable-grob-interface",
-  "A grob (a Paper_column) that takes part in the
+  "A grob (a Paper_column) that takes part in the\n\
 spacing problem. ",
-  "measure-length spacing-wishes penalty minimum-distances ideal-distances
+  "measure-length spacing-wishes penalty minimum-distances ideal-distances\n\
 left-neighbors right-neighbors");
 
--- lilypond-1.6.11/lily/spacing-spanner.cc.orig	2002-09-13 00:12:17.000000000 +0200
+++ lilypond-1.6.11/lily/spacing-spanner.cc	2003-08-24 18:04:15.505805952 +0200
@@ -863,17 +863,17 @@
 
 
 ADD_INTERFACE (Spacing_spanner,"spacing-spanner-interface",
-  "
-The space taken by a note is dependent on its duration. Doubling a
-duration adds spacing-increment to the space. The most common shortest
-note gets shortest-duration-space. Notes that are even shorter are
-spaced proportonial to their duration.
-
-Typically, the increment is the width of a black note head.  In a
-piece with lots of 8th notes, and some 16th notes, the eighth note
-gets 2 note heads width (i.e. the space following a note is 1 note
-head width) A 16th note is followed by 0.5 note head width. The
-quarter note is followed by  3 NHW, the half by 4 NHW, etc.
+  "\n\
+The space taken by a note is dependent on its duration. Doubling a\n\
+duration adds spacing-increment to the space. The most common shortest\n\
+note gets shortest-duration-space. Notes that are even shorter are\n\
+spaced proportonial to their duration.\n\
+\n\
+Typically, the increment is the width of a black note head.  In a\n\
+piece with lots of 8th notes, and some 16th notes, the eighth note\n\
+gets 2 note heads width (i.e. the space following a note is 1 note\n\
+head width) A 16th note is followed by 0.5 note head width. The\n\
+quarter note is followed by  3 NHW, the half by 4 NHW, etc.\n\
 ",
   "grace-space-factor spacing-increment base-shortest-duration shortest-duration-space common-shortest-duration");
 
--- lilypond-1.6.11/lily/span-bar-engraver.cc.orig	2002-07-26 02:23:27.000000000 +0200
+++ lilypond-1.6.11/lily/span-bar-engraver.cc	2003-08-24 18:04:37.130518496 +0200
@@ -90,7 +90,7 @@
 
 
 ENTER_DESCRIPTION(Span_bar_engraver,
-/* descr */       "This engraver makes cross-staff barlines: It catches all normal
+/* descr */       "This engraver makes cross-staff barlines: It catches all normal\n\
 bar lines, and draws a single span-bar across them.",
 /* creats*/       "SpanBar",
 /* acks  */       "bar-line-interface",
--- lilypond-1.6.11/lily/spanner.cc.orig	2002-09-08 02:00:56.000000000 +0200
+++ lilypond-1.6.11/lily/spanner.cc	2003-08-24 18:04:59.598102904 +0200
@@ -351,11 +351,11 @@
 
 ADD_INTERFACE(Spanner,
 	      "spanner-interface",
-	      "
-Other grobs have a shape that depends on the horizontal spacing. For
-example, slur, beam, tie, etc. These grobs form a subtype called
-@code{Spanner}. All spanners have two span-points (these must be
-@code{Item}s), one on the left and one on the right. The left bound is
-also the X-reference point of the spanner.
+	      "\n\
+Other grobs have a shape that depends on the horizontal spacing. For\n\
+example, slur, beam, tie, etc. These grobs form a subtype called\n\
+@code{Spanner}. All spanners have two span-points (these must be\n\
+@code{Item}s), one on the left and one on the right. The left bound is\n\
+also the X-reference point of the spanner.\n\
 ",
 	      "minimum-length");
--- lilypond-1.6.11/lily/staff-symbol.cc.orig	2002-07-26 02:23:27.000000000 +0200
+++ lilypond-1.6.11/lily/staff-symbol.cc	2003-08-24 18:06:04.786192808 +0200
@@ -116,9 +116,9 @@
 
 
 ADD_INTERFACE (Staff_symbol,"staff-symbol-interface",
-  "This spanner draws the lines of a staff.  The center (i.e. middle line
-or space) is position 0. The length of the symbol may be set by hand
-through the @code{width} property.
+  "This spanner draws the lines of a staff.  The center (i.e. middle line\n\
+or space) is position 0. The length of the symbol may be set by hand\n\
+through the @code{width} property.\n\
 ",
 	       
   "width staff-space thickness line-count");
--- lilypond-1.6.11/lily/staff-symbol-engraver.cc.orig	2002-07-26 02:23:27.000000000 +0200
+++ lilypond-1.6.11/lily/staff-symbol-engraver.cc	2003-08-24 18:06:19.702925120 +0200
@@ -71,7 +71,7 @@
 
 
 ENTER_DESCRIPTION(Staff_symbol_engraver,
-/* descr */       "create the constellation of five (default)
+/* descr */       "create the constellation of five (default)\n\
 staff lines.",
 /* creats*/       "StaffSymbol",
 /* acks  */       "grob-interface",
--- lilypond-1.6.11/lily/staff-symbol-referencer.cc.orig	2002-07-26 02:23:27.000000000 +0200
+++ lilypond-1.6.11/lily/staff-symbol-referencer.cc	2003-08-24 18:07:11.003126304 +0200
@@ -162,8 +162,8 @@
 
 #define has_interface ugly_hack
 ADD_INTERFACE (Staff_symbol_referencer,"staff-symbol-referencer-interface",
-  "Object whose Y position is meaning with reference to a staff
-symbol. Objects that have this interface should include
-Staff_symbol_referencer::callback in their Y-offset-callback.
+  "Object whose Y position is meaning with reference to a staff\n\
+symbol. Objects that have this interface should include\n\
+Staff_symbol_referencer::callback in their Y-offset-callback.\n\
 ",
   "staff-position");
--- lilypond-1.6.11/lily/stem-engraver.cc.orig	2002-10-19 01:32:59.000000000 +0200
+++ lilypond-1.6.11/lily/stem-engraver.cc	2003-08-24 18:07:47.922513704 +0200
@@ -172,7 +172,7 @@
 }
 
 ENTER_DESCRIPTION(Stem_engraver,
-/* descr */       "Create stems and single-stem tremolos.  It also works together with
+/* descr */       "Create stems and single-stem tremolos.  It also works together with\n\
 the beam engraver for overriding beaming.",
 /* creats*/       "Stem StemTremolo",
 /* acks  */       "rhythmic-head-interface",
--- lilypond-1.6.11/lily/system.cc.orig	2002-09-19 23:31:01.000000000 +0200
+++ lilypond-1.6.11/lily/system.cc	2003-08-24 18:08:24.232993672 +0200
@@ -557,11 +557,11 @@
 
 
 ADD_INTERFACE (System,"system-interface",
-  "Super grob, parent of all:
-
-The columns of a score that form one line.  The toplevel grob.  Any
-grob has a Line_of_score as both X and Y reference point. The
-Paper_score contains one grob of this type. Control enters the
-Grob dependency calculation from this single Line_of_score
+  "Super grob, parent of all:\n\
+\n\
+The columns of a score that form one line.  The toplevel grob.  Any\n\
+grob has a Line_of_score as both X and Y reference point. The\n\
+Paper_score contains one grob of this type. Control enters the\n\
+Grob dependency calculation from this single Line_of_score\n\
 object.",
   "between-system-string all-elements columns");
--- lilypond-1.6.11/lily/thread-devnull-engraver.cc.orig	2002-07-26 02:23:27.000000000 +0200
+++ lilypond-1.6.11/lily/thread-devnull-engraver.cc	2003-08-24 18:09:20.479442912 +0200
@@ -49,13 +49,13 @@
 Thread_devnull_engraver::Thread_devnull_engraver(){}
 
 ENTER_DESCRIPTION(Thread_devnull_engraver,
-/* descr */       "Kill elements whenever we are Voice called `two' and either
-unison, unisilence or soloADue is set.@footnote{On unix systems, the
-file @file{/dev/null} is special device: anything written to it is
-discarded.}. This engraver works closely together with the part
-combiner.  When the part combiner notices that two threads are
-identical, it tells the @code{Thread_devnull_engraver} to discard
-everything in the second thread.
+/* descr */       "Kill elements whenever we are Voice called `two' and either\n\
+unison, unisilence or soloADue is set.@footnote{On unix systems, the\n\
+file @file{/dev/null} is special device: anything written to it is\n\
+discarded.}. This engraver works closely together with the part\n\
+combiner.  When the part combiner notices that two threads are\n\
+identical, it tells the @code{Thread_devnull_engraver} to discard\n\
+everything in the second thread.\n\
 ",
 /* creats*/       "",
 /* acks  */       "grob-interface",
--- lilypond-1.6.11/lily/tie.cc.orig	2002-07-26 02:23:27.000000000 +0200
+++ lilypond-1.6.11/lily/tie.cc	2003-08-24 18:10:23.222904456 +0200
@@ -330,6 +330,6 @@
 
 
 ADD_INTERFACE (Tie,"tie-interface",
-  "A tie connecting two noteheads.
+  "A tie connecting two noteheads.\n\
 direction = Forced direction for all ties",
   "y-offset staffline-clearance control-points heads details thickness x-gap direction minimum-length");
--- lilypond-1.6.11/lily/time-signature.cc.orig	2002-09-10 01:40:39.000000000 +0200
+++ lilypond-1.6.11/lily/time-signature.cc	2003-08-24 18:11:35.876859376 +0200
@@ -125,30 +125,30 @@
 }
 
 ADD_INTERFACE (Time_signature,"time-signature-interface",
-  "A time signature, in different styles.
-  The following values for 'style are are recognized:
-
-    @table @samp
-      @item @code{C}
-        4/4 and 2/2 are typeset as C and struck C, respectively.  All
-        other time signatures are written with two digits.
-
-      @item @code{neo_mensural}
-        2/2, 3/2, 2/4, 3/4, 4/4, 6/4, 9/4, 4/8, 6/8 and 9/8 are
-        typeset with neo-mensural style mensuration marks.  All other time
-        signatures are written with two digits.
-
-      @item @code{mensural}
-        2/2, 3/2, 2/4, 3/4, 4/4, 6/4, 9/4, 4/8, 6/8 and 9/8 are
-        typeset with mensural style mensuration marks.  All other time
-        signatures are written with two digits.
-
-      @item @code{1xxx}
-        All time signatures are typeset with a single
-        digit, e.g. 3/2 is written as 3. (Any symbol starting
-	with the digit @code{1} will do.)
-    @end table
-
-See also the test-file @file{input/test/time.ly}.
+  "A time signature, in different styles.\n\
+  The following values for 'style are are recognized:\n\
+\n\
+    @table @samp\n\
+      @item @code{C}\n\
+        4/4 and 2/2 are typeset as C and struck C, respectively.  All\n\
+        other time signatures are written with two digits.\n\
+\n\
+      @item @code{neo_mensural}\n\
+        2/2, 3/2, 2/4, 3/4, 4/4, 6/4, 9/4, 4/8, 6/8 and 9/8 are\n\
+        typeset with neo-mensural style mensuration marks.  All other time\n\
+        signatures are written with two digits.\n\
+\n\
+      @item @code{mensural}\n\
+        2/2, 3/2, 2/4, 3/4, 4/4, 6/4, 9/4, 4/8, 6/8 and 9/8 are\n\
+        typeset with mensural style mensuration marks.  All other time\n\
+        signatures are written with two digits.\n\
+\n\
+      @item @code{1xxx}\n\
+        All time signatures are typeset with a single\n\
+        digit, e.g. 3/2 is written as 3. (Any symbol starting\n\
+	with the digit @code{1} will do.)\n\
+    @end table\n\
+\n\
+See also the test-file @file{input/test/time.ly}.\n\
 ",
   "fraction style");
--- lilypond-1.6.11/lily/timing-engraver.cc.orig	2002-08-04 18:56:18.000000000 +0200
+++ lilypond-1.6.11/lily/timing-engraver.cc	2003-08-24 18:12:49.525663056 +0200
@@ -90,9 +90,9 @@
 
 
 ENTER_DESCRIPTION(Timing_engraver,
-/* descr */       " Responsible for synchronizing timing information from staves. 
-Normally in @code{Score}.  In order to create polyrhythmic music,
-this engraver should be removed from @code{Score} and placed in
+/* descr */       " Responsible for synchronizing timing information from staves. \n\
+Normally in @code{Score}.  In order to create polyrhythmic music,\n\
+this engraver should be removed from @code{Score} and placed in\n\
 @code{Staff}.",
 /* creats*/       "",
 /* acks  */       "",
--- lilypond-1.6.11/lily/translator.cc.orig	2002-09-14 01:08:56.000000000 +0200
+++ lilypond-1.6.11/lily/translator.cc	2003-08-24 18:13:09.149679752 +0200
@@ -136,7 +136,7 @@
 
 LY_DEFINE(ly_translator_name,
 	  "ly-translator-name", 1,0,0,  (SCM trans),
-	  "Return the type name of the translator @var{trans}.
+	  "Return the type name of the translator @var{trans}.\n\
 ")
 {
   Translator* tr =  unsmob_translator (trans);
--- lilypond-1.6.11/lily/translator-ctors.cc.orig	2002-07-26 02:23:27.000000000 +0200
+++ lilypond-1.6.11/lily/translator-ctors.cc	2003-08-24 18:13:25.511192424 +0200
@@ -20,7 +20,7 @@
 Dictionary<Translator*> *global_translator_dict=0;
 
 LY_DEFINE(ly_get_all_translators,"ly-get-all-translators", 0, 0, 0,  (),
-	  "Return an list of a all translator objects that may be instantiated
+	  "Return an list of a all translator objects that may be instantiated\n\
 during a lilypond run.")
 {
   SCM l = SCM_EOL;
--- lilypond-1.6.11/lily/translator-group.cc.orig	2002-08-04 18:56:18.000000000 +0200
+++ lilypond-1.6.11/lily/translator-group.cc	2003-08-24 18:13:43.781414928 +0200
@@ -425,7 +425,7 @@
 LY_DEFINE(ly_set_context_property,
 	  "ly-set-context-property", 3, 0, 0,
 	  (SCM context, SCM name, SCM val),
-	  "set value of property @var{sym} in context @var{tr} to @var{val}.
+	  "set value of property @var{sym} in context @var{tr} to @var{val}.\n\
 ")
 {
   Translator *t = unsmob_translator (context);
